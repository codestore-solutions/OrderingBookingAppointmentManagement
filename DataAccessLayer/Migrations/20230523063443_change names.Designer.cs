// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230523063443_change names")]
    partial class changenames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Models.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("EntityLayer.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("OrderAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderLineItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderQty")
                        .HasColumnType("int");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShippingAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShippingMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EntityLayer.Models.OrderLineItems", b =>
                {
                    b.Property<Guid>("OrderLineItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineItemsId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("EntityLayer.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            PaymentId = new Guid("79cfae30-87cc-46b0-a89c-32c198631c70")
                        },
                        new
                        {
                            PaymentId = new Guid("81bc3942-83b1-4282-9e72-4f0c999a3a85")
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderLineItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("real");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("d17aa43f-f3f5-4608-afcb-676934e24eb6"),
                            OrderLineItemsId = new Guid("1ab5c72a-b269-492b-83b7-d216dafd18fe"),
                            ProductPrice = 24999f,
                            ProductQuantity = 1
                        },
                        new
                        {
                            ProductId = new Guid("d9252eae-e632-41d5-b514-538ade203252"),
                            OrderLineItemsId = new Guid("7f03c2e7-47b5-4ff0-a685-8e63f4ffc910"),
                            ProductPrice = 9999f,
                            ProductQuantity = 1
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.ShippingMethod", b =>
                {
                    b.Property<Guid>("ShippingMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("ShippingMethodId");

                    b.ToTable("ShippingMethods");

                    b.HasData(
                        new
                        {
                            ShippingMethodId = new Guid("50860922-b382-4e1d-955b-ba2c4a1ce73b"),
                            Name = "Fast Delivery",
                            price = 199f
                        },
                        new
                        {
                            ShippingMethodId = new Guid("704e504a-7798-4cfd-9d4a-eb33fe65e3a8"),
                            Name = "Normal Delivery",
                            price = 49f
                        },
                        new
                        {
                            ShippingMethodId = new Guid("17190837-8f82-4e31-870a-d12c6c091766"),
                            Name = "Self pickup",
                            price = 0f
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.ShippngAddress", b =>
                {
                    b.Property<Guid>("ShippingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShippingAddressId");

                    b.ToTable("ShippngAddress");

                    b.HasData(
                        new
                        {
                            ShippingAddressId = new Guid("58cfcf45-6ff3-4115-a651-c68bffa9cb44")
                        },
                        new
                        {
                            ShippingAddressId = new Guid("d6b3ae4b-095e-4909-912b-d2ef09591af8")
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8a614a91-cca1-4584-a66d-daf79789243a")
                        },
                        new
                        {
                            UserId = new Guid("d6c496a9-783f-4beb-a619-578b78d3b9ee")
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.WishList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
