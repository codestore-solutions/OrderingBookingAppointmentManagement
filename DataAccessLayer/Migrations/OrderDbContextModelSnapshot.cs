// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Models.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("EntityLayer.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("OrderAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderLineItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderQty")
                        .HasColumnType("int");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShippingAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShippingMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EntityLayer.Models.OrderLineItems", b =>
                {
                    b.Property<Guid>("OrderLineItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineItemsId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("EntityLayer.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            PaymentId = new Guid("313d6fe1-0cb0-47d7-83df-e44802c4d392")
                        },
                        new
                        {
                            PaymentId = new Guid("32ae8b46-49e0-49aa-a335-677cd0d699b7")
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderLineItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("real");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("6ee21223-f486-4a8d-9446-ec6792b8d439"),
                            OrderLineItemsId = new Guid("c9cb52b8-d155-4125-a504-5b31a60b0c63"),
                            ProductPrice = 24999f,
                            ProductQuantity = 1
                        },
                        new
                        {
                            ProductId = new Guid("efe640a6-39c7-40ce-b7f1-ed24d37dea0b"),
                            OrderLineItemsId = new Guid("eaf6ec93-2abe-4df1-964f-c57614b33c94"),
                            ProductPrice = 9999f,
                            ProductQuantity = 1
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.ShippingMethod", b =>
                {
                    b.Property<Guid>("ShippingMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("ShippingMethodId");

                    b.ToTable("ShippingMethods");

                    b.HasData(
                        new
                        {
                            ShippingMethodId = new Guid("c94bcad8-4825-4016-a48d-70c56346e558"),
                            Name = "Fast Delivery",
                            price = 199f
                        },
                        new
                        {
                            ShippingMethodId = new Guid("c2335dc0-5d37-46e3-979f-13951f814d4b"),
                            Name = "Normal Delivery",
                            price = 49f
                        },
                        new
                        {
                            ShippingMethodId = new Guid("2d21930f-f418-4e4b-acdc-b90cddcf2d0f"),
                            Name = "Self pickup",
                            price = 0f
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.ShippngAddress", b =>
                {
                    b.Property<Guid>("ShippingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShippingAddressId");

                    b.ToTable("ShippngAddress");

                    b.HasData(
                        new
                        {
                            ShippingAddressId = new Guid("68dbd37c-ea65-48c8-95e3-ad8dd948cb8a")
                        },
                        new
                        {
                            ShippingAddressId = new Guid("488f4dfb-aa3b-4b55-9b91-be558a02d0fa")
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8a871cc3-df68-49b6-b0d9-5a70d3f2111c")
                        },
                        new
                        {
                            UserId = new Guid("931a9eaa-1080-4b88-aa8d-46d394086caa")
                        });
                });

            modelBuilder.Entity("EntityLayer.Models.WishList", b =>
                {
                    b.Property<Guid>("WishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WishListId");

                    b.ToTable("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
